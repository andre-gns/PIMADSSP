@page "/vendas"

<PageTitle>Vendas</PageTitle>

<!-- Título na parte superior -->
<div style="text-align: left; margin-bottom: 20px;">
    <RadzenText Text="Vendas" TextStyle="TextStyle.H3" TagName="TagName.H1" class="rz-mb-4" />
</div>

<!-- Barra de busca e botão exportar -->
<div style="display: flex; align-items: center; margin-bottom: 10px; gap: 10px;">
    <!-- Campo de busca -->
    <RadzenTextBox Placeholder="Procurar..."
                   Style="flex-grow: 1; width: auto; min-width: 100px;"
                   @bind-Value="searchText"
                   @oninput="FilterData" />

    <!-- Botão Exportar -->
    <RadzenSplitButton ButtonStyle="ButtonStyle.Secondary"
                       Icon="get_app"
                       Text="Exportar"
                       Variant="Radzen.Variant.Filled"
                       Shade="Radzen.Shade.Lighter"
                       IconColor="black"
                       Style="min-width: 140px;"
                       Click="OnExportarClick">
        <RadzenSplitButtonItem Text="Excel" Value="xlsx" />
        <RadzenSplitButtonItem Text="CSV" Value="csv" />
    </RadzenSplitButton>

    <!-- Botão Adicionar -->
    <RadzenButton ButtonStyle="ButtonStyle.Primary"
                  Icon="add_circle_outline"
                  Text="Adicionar"
                  Click="@AddButtonClick"
                  Variant="Radzen.Variant.Filled"
                  Shade="Radzen.Shade.Light" />
</div>

<!-- DataGrid 1: Registro de Venda de Produtos -->
<div style="margin-top: 10px;">
    <RadzenRow>
        <RadzenDataGrid Data="@filteredData"
                        TItem="dynamic"
                        AllowFiltering="true"
                        AllowSorting="true"
                        AllowPaging="true"
                        AllowResizing="true"
                        EmptyText="Sem itens para mostrar"
                        Style="border: 1px solid black; padding: 10px; width: 100%; height: auto; min-height: 300px; word-wrap: break-word; white-space: normal;">
            <HeaderTemplate>
                <div>
                    <RadzenText Text="Registro de Venda de Produtos" TextStyle="Radzen.Blazor.TextStyle.H6" />
                </div>
            </HeaderTemplate>
            <Columns>
                <RadzenDataGridColumn TItem="dynamic" Property="IDPedido" Title="ID Pedido" Filterable="true" Sortable="true" Width="10%" />
                <RadzenDataGridColumn TItem="dynamic" Property="Produto" Title="Produto" Filterable="true" Sortable="true" Width="15%" />
                <RadzenDataGridColumn TItem="dynamic" Property="Quantidade" Title="Quantidade" Filterable="true" Sortable="true" Width="10%" />
                <RadzenDataGridColumn TItem="dynamic" Property="Unidade" Title="Unidade" Filterable="true" Sortable="true" Width="10%" />
                <RadzenDataGridColumn TItem="dynamic" Property="Data" Title="Data" Filterable="true" Sortable="true" Width="15%" />
                <RadzenDataGridColumn TItem="dynamic" Property="Cliente" Title="Cliente" Filterable="true" Sortable="true" Width="15%" />
                <RadzenDataGridColumn TItem="dynamic" Property="ValorUnitario" Title="Valor Unitário" Filterable="true" Sortable="true" Width="10%" />
                <RadzenDataGridColumn TItem="dynamic" Property="Total" Title="Total" Filterable="true" Sortable="true" Width="15%" />
            </Columns>
        </RadzenDataGrid>
    </RadzenRow>
</div>

<!-- DataGrid 2: Estoque de Produto -->
<div style="margin-top: 20px;">
    <RadzenRow>
        <RadzenDataGrid Data="@estoqueData"
                        TItem="dynamic"
                        AllowFiltering="true"
                        AllowSorting="true"
                        AllowPaging="true"
                        AllowResizing="true"
                        EmptyText="Sem itens para mostrar"
                        Style="border: 1px solid black; padding: 10px; width: 100%; height: auto; min-height: 300px; word-wrap: break-word; white-space: normal;">
            <HeaderTemplate>
                <div>
                    <RadzenText Text="Estoque de Produto" TextStyle="Radzen.Blazor.TextStyle.H6" />
                </div>
            </HeaderTemplate>
            <Columns>
                <RadzenDataGridColumn TItem="dynamic" Property="ID" Title="ID" Filterable="true" Sortable="true" Width="10%" />
                <RadzenDataGridColumn TItem="dynamic" Property="Produto" Title="Produto" Filterable="true" Sortable="true" Width="20%" />
                <RadzenDataGridColumn TItem="dynamic" Property="Categoria" Title="Categoria" Filterable="true" Sortable="true" Width="15%" />
                <RadzenDataGridColumn TItem="dynamic" Property="Quantidade" Title="Quantidade" Filterable="true" Sortable="true" Width="10%" />
                <RadzenDataGridColumn TItem="dynamic" Property="Unidade" Title="Unidade" Filterable="true" Sortable="true" Width="10%" />
                <RadzenDataGridColumn TItem="dynamic" Property="DataEntrada" Title="Data de Entrada" Filterable="true" Sortable="true" Width="20%" />
                <RadzenDataGridColumn TItem="dynamic" Property="IDProducao" Title="ID Produção" Filterable="true" Sortable="true" Width="15%" />
            </Columns>
        </RadzenDataGrid>
    </RadzenRow>
</div>

@code {
    private List<dynamic> dataGridNovoItems = new List<dynamic>
    {
        new { IDPedido = "1", Produto = "Alface", Quantidade = 10, Unidade = "kg", Data = "2024-11-01", Cliente = "João Silva", ValorUnitario = 2.50, Total = 25.00 },
        new { IDPedido = "2", Produto = "Tomate", Quantidade = 15, Unidade = "kg", Data = "2024-11-02", Cliente = "Maria Oliveira", ValorUnitario = 3.00, Total = 45.00 }
    };

    private List<dynamic> estoqueData = new List<dynamic>
    {
        new { ID = "1", Produto = "Alface", Categoria = "Hortaliças", Quantidade = 50, Unidade = "kg", DataEntrada = "2024-10-30", IDProducao = "P01" },
        new { ID = "2", Produto = "Tomate", Categoria = "Hortaliças", Quantidade = 100, Unidade = "kg", DataEntrada = "2024-10-25", IDProducao = "P02" }
    };

    private List<dynamic> filteredData;
    private string searchText = string.Empty;

    protected override void OnInitialized()
    {
        filteredData = dataGridNovoItems;
    }

    private void FilterData()
    {
        if (string.IsNullOrWhiteSpace(searchText))
        {
            filteredData = dataGridNovoItems;
        }
        else
        {
            string searchLower = searchText.ToLower();
            filteredData = dataGridNovoItems.Where(item =>
                item.IDPedido.ToString().ToLower().Contains(searchLower) ||
                item.Produto.ToLower().Contains(searchLower) ||
                item.Quantidade.ToString().ToLower().Contains(searchLower) ||
                item.Unidade.ToLower().Contains(searchLower) ||
                item.Data.ToLower().Contains(searchLower) ||
                item.Cliente.ToLower().Contains(searchLower) ||
                item.ValorUnitario.ToString().ToLower().Contains(searchLower) ||
                item.Total.ToString().ToLower().Contains(searchLower)).ToList();
        }
    }

    private void OnExportarClick(object args)
    {
        string exportType = args.ToString()?.ToLower();
        if (exportType == "xlsx")
        {
            ExportToExcel();
        }
        else if (exportType == "csv")
        {
            ExportToCsv();
        }
    }

    private void ExportToExcel()
    {
        Console.WriteLine("Exportando para Excel...");
    }

    private void ExportToCsv()
    {
        Console.WriteLine("Exportando para CSV...");
    }

    [Inject]
    public NavigationManager NavigationManager { get; set; } // serviço de navegação

    private void AddButtonClick()
    {
        NavigationManager.NavigateTo("/cadastrar-venda");
    }
}
